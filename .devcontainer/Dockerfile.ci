# Use a smaller CUDA runtime image instead of the devel version
FROM ubuntu:20.04 

LABEL maintainer="Your Name <your.email@example.com>"

ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH=/opt/conda/bin:$PATH
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Install minimal dependencies
RUN apt-get update -q && \
    apt-get install -q -y --no-install-recommends \
        bzip2 \
        ca-certificates \
        git \
        wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install Miniforge (lighter alternative to Miniconda)
ARG MINIFORGE_URL="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh"
RUN wget "$MINIFORGE_URL" -O miniforge.sh -q && \
    bash miniforge.sh -b -p /opt/conda && \
    rm miniforge.sh && \
    /opt/conda/bin/conda clean -afy

# Set up the working directory
WORKDIR /workdir
# Copy only the files tracked by Git (ignoring .gitignore files)
COPY . .

# Extract the tar archive into the workdir
RUN rm -rf .github && \
    chmod -R +x /workdir

# Activate the environment and install pip packages
RUN conda env create -f .devcontainer/linux-gnu.yml && \
    /opt/conda/bin/conda clean -afy

# Clean up any unnecessary conda and pip files
RUN conda clean -afy && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete

RUN rm -rf /root/.cache/pip 

# Activate the environment and run the entrypoint
ENTRYPOINT ["/bin/bash", "-c", "source activate mimic3 && exec /bin/bash"]

